{
    // http://www.jshint.com/docs/
    //
    // ENFORCING OPTIONS
    // These options tell JSHint to be more strict towards your code. Use them if
    // you want to allow only a safe subset of JavaScriptâ€”very useful when your
    // codebase is shared with a big number of developers with different skill
    // levels.

    "browser"   : true,     // Standard browser globals e.g. `window`, `document`.
    "bitwise"   : true,     // Prohibits the use of bitwise operators such as ^ (XOR), | (OR) and others.
    "boss"      : true,     // Suppresses warnings about the use of assignments in cases where comparisons are expected.
    "camelcase" : true,     // Force all variable names to use either camelCase style or UPPER_CASE with underscores.
    "curly"     : true,     // Requires you to always put curly braces around blocks in loops and conditionals.
    "eqnull"    : true,     // Suppresses warnings about == null comparisons.
    "immed"     : true,     // Prohibits the use of immediate function invocations without wrapping them in parentheses.
    "indent"    : 4,        // Enforces specific tab width.
    "jquery"    : true,     // Defines globals exposed by the jQuery JavaScript library.
    "newcap"    : true,     // Requires you to capitalize names of constructor functions.
    "noarg"     : true,     // Prohibits the use of `arguments.caller` and `arguments.callee`.
    "node"      : true,     // Enable globals available when code is running inside of the NodeJS runtime environment.
    "quotmark"  : "single", // Enforces the consistency of quotation marks used throughout your code.
    "smarttabs" : true,     // Suppresses warnings about mixed tabs and spaces when the latter are used for alignmnent only.
    "strict"    : true,     // Requires all functions to run in ECMAScript 5's strict mode.
    "sub"       : true,     // Suppresses warnings about using `[]` notation when it can be expressed in dot notation.
    "trailing"  : true,     // Makes it an error to leave a trailing whitespace in your code.
    "undef"     : true,     // Prohibits the use of explicitly undeclared variables.
    "unused"    : true      // Warns when you define and never use your variables.
}
